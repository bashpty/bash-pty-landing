name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      - name: Install repo
        id: repo
        run: npm install -g pnpm
      - name: Install Dependcies
        id: deps
        run: npm i -D nuxt nuxi
      - name: Install Packages
        id: packages
        run: pnpm i
      - name: Install build
        id: packagesbuild
        run: npm run generate
      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          static_site_generator: nuxt
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            app/.output/public
            .nuxt
          key: ${{ runner.os }}-nuxt-build-${{ hashFiles('dist') }}
          restore-keys: |
            ${{ runner.os }}-nuxt-build-
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: app/.output/public
  deploy:
    environment:
      name: github-pages
      url: bashpty.github.io
    runs-on: ubuntu-latest
    needs: build_and_deploy_job
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
